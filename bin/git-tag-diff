#!/bin/sh

main () {
  # find command
  while true; do
    case "$1" in
      -h|--help) usage "$0" && exit 1 ;;
      -- ) shift; break ;;
      * ) break ;;
    esac
  done

  assert_dep 'tac'

  trap clean SIGHUP SIGINT SIGTERM

  tag_commit="$(get_tag_commit)"
  if [ -z "$tag_commit" ]; then
    tag_commit="$(git rev-list --max-parents=0 HEAD)"
  fi

  git log --oneline "$tag_commit"..HEAD \
    | awk '{ $1="["$1"]"; print }' \
    | sed 's/^/- /'
}

usage () {
  printf "Usage: %s\n" "$(basename "$1")"
}

clean () {
  printf "cleaning up\n"
}

assert_dep () {
  "$1" --help > /dev/null 2>&1
  [ $? -eq 0 ] && return
  [ $? -ne 0 ] && man "$1" > /dev/null
  [ $? -ne 0 ] && { printf "dependency %s not found\n" "$1"; exit 1; }
}

get_tag_commit () {
  git tag -l -n1 \
    | tac \
    | head -1 \
    | awk '{ print $2 }' \
    | xargs git log --all --oneline --grep \
    | awk '{ print $1 }'
}

# reorder args and pass to main()
getopt -T > /dev/null
if [ "$?" -eq 4 ]; then args="$(getopt --long help --options h -- "$*")"
else args="$(getopt h "$*")"; fi
[ ! $? -eq 0 ] && { usage "$0" && exit 2; }
eval set -- "$args"
main "$@"
